diff -purN a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2014-08-10 05:21:45.000000000 +0100
+++ b/CMakeLists.txt	2017-08-11 14:18:17.097713853 +0100
@@ -23,6 +23,7 @@ set(CPACK_SOURCE_PACKAGE_FILE_NAME
 set(CPACK_SOURCE_IGNORE_FILES
   "/.git*;/.cvs*;${CPACK_SOURCE_IGNORE_FILES}")
 INCLUDE ( CPack )
+INCLUDE ( GNUInstallDirs )
 
 
 # Allow the developer to select if Dynamic or Static libraries are built
@@ -44,55 +45,18 @@ INCLUDE_DIRECTORIES ( Iex IexMath Imath
 # also add the current directory to pick up the autogenerated headers
 SET(CMAKE_INCLUDE_CURRENT_DIR ON)
 
-MACRO(GET_TARGET_PROPERTY_WITH_DEFAULT _variable _target _property _default_value)
-   GET_TARGET_PROPERTY (${_variable} ${_target} ${_property})
-   IF (${_variable} MATCHES NOTFOUND)
-     SET (${_variable} ${_default_value})
-   ENDIF (${_variable} MATCHES NOTFOUND)
- ENDMACRO (GET_TARGET_PROPERTY_WITH_DEFAULT)
-
- MACRO(CREATE_LIBTOOL_FILE _target _install_DIR)
-   GET_TARGET_PROPERTY(_target_location ${_target} LOCATION)
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_static_lib ${_target} STATIC_LIB "")
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_dependency_libs ${_target} LT_DEPENDENCY_LIBS "")
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_current ${_target} LT_VERSION_CURRENT 0)
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_age ${_target} LT_VERSION_AGE 0)
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_revision ${_target} LT_VERSION_REVISION 0)
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_installed ${_target} LT_INSTALLED yes)
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_shouldnotlink ${_target} LT_SHOULDNOTLINK yes)
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_dlopen ${_target} LT_DLOPEN "")
-   GET_TARGET_PROPERTY_WITH_DEFAULT(_target_dlpreopen ${_target} LT_DLPREOPEN "")
-   GET_FILENAME_COMPONENT(_laname ${_target_location} NAME_WE)
-   GET_FILENAME_COMPONENT(_soname ${_target_location} NAME)
-   SET(_laname ${PROJECT_BINARY_DIR}/${_laname}.la)
-   FILE(WRITE ${_laname} "# ${_laname} - a libtool library file\n")
-   FILE(APPEND ${_laname} "# Generated by CMake ${CMAKE_VERSION} (like GNU libtool)\n")
-   FILE(APPEND ${_laname} "\n# Please DO NOT delete this file!\n# It is necessary for linking the library with libtool.\n\n" )
-   FILE(APPEND ${_laname} "# The name that we can dlopen(3).\n")
-   FILE(APPEND ${_laname} "dlname='${_soname}'\n\n")
-   FILE(APPEND ${_laname} "# Names of this library.\n")
-   FILE(APPEND ${_laname} "library_names='${_soname}.${_target_current}.${_target_age}.${_target_revision} ${_soname}.${_target_current} ${_soname}'\n\n")
-   FILE(APPEND ${_laname} "# The name of the static archive.\n")
-   FILE(APPEND ${_laname} "old_library='${_target_static_lib}'\n\n")
-   FILE(APPEND ${_laname} "# Libraries that this one depends upon.\n")
-   FILE(APPEND ${_laname} "dependency_libs='${_target_dependency_libs}'\n\n")
-   FILE(APPEND ${_laname} "# Names of additional weak libraries provided by this library\n")
-   FILE(APPEND ${_laname} "weak_library_names=\n\n")
-   FILE(APPEND ${_laname} "# Version information for ${_laname}.\n")
-   FILE(APPEND ${_laname} "current=${_target_current}\n")
-   FILE(APPEND ${_laname} "age=${_target_age}\n")
-   FILE(APPEND ${_laname} "revision=${_target_revision}\n\n")
-   FILE(APPEND ${_laname} "# Is this an already installed library?\n")
-   FILE(APPEND ${_laname} "installed=${_target_installed}\n\n")
-   FILE(APPEND ${_laname} "# Should we warn about portability when linking against -modules?\n")
-   FILE(APPEND ${_laname} "shouldnotlink=${_target_shouldnotlink}\n\n")
-   FILE(APPEND ${_laname} "# Files to dlopen/dlpreopen\n")
-   FILE(APPEND ${_laname} "dlopen='${_target_dlopen}'\n")
-   FILE(APPEND ${_laname} "dlpreopen='${_target_dlpreopen}'\n\n")
-   FILE(APPEND ${_laname} "# Directory that this library needs to be installed in:\n")
-   FILE(APPEND ${_laname} "libdir='${CMAKE_INSTALL_PREFIX}${_install_DIR}'\n")
-   INSTALL( FILES ${_laname} DESTINATION ${CMAKE_INSTALL_PREFIX}${_install_DIR})
- ENDMACRO(CREATE_LIBTOOL_FILE)
+MACRO(CREATE_LEGACY_SYMLINK _libname)
+   SET(_newname lib${_libname}-${ILMBASE_VERSION_API}.so)
+   SET(_legacyname lib${_libname}.so)
+   SET(_libpath ${PROJECT_BINARY_DIR}/${_libname})
+   INSTALL(
+      CODE "EXECUTE_PROCESS (
+         COMMAND ln -sf ${_newname} ${_legacyname}
+         WORKING_DIRECTORY ${_libpath}
+         )"
+   )
+   INSTALL( FILES ${_libpath}/${_legacyname} DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR} )
+ENDMACRO(CREATE_LEGACY_SYMLINK)
 
 SET (LIB_TYPE STATIC)
 IF (BUILD_SHARED_LIBS)
@@ -188,12 +152,11 @@ SET_TARGET_PROPERTIES ( IexMath
   OUTPUT_NAME "IexMath${ILMBASE_LIBSUFFIX}"
   )
 
-IF ( NOT WIN32 )
-  CREATE_LIBTOOL_FILE ( Half /lib )
-  CREATE_LIBTOOL_FILE ( Iex /lib )
-  CREATE_LIBTOOL_FILE ( IexMath /lib )
-  CREATE_LIBTOOL_FILE ( Imath /lib )
-  CREATE_LIBTOOL_FILE ( IlmThread /lib )
+IF ( NOT WIN32 AND NAMESPACE_VERSIONING )
+  CREATE_LEGACY_SYMLINK ( Iex )
+  CREATE_LEGACY_SYMLINK ( IexMath )
+  CREATE_LEGACY_SYMLINK ( Imath )
+  CREATE_LEGACY_SYMLINK ( IlmThread )
 ENDIF ()
 
 # Tests
@@ -207,15 +170,15 @@ ADD_SUBDIRECTORY ( ImathTest )
 INSTALL ( FILES 
   ${CMAKE_CURRENT_BINARY_DIR}/config/IlmBaseConfig.h
   DESTINATION
-  include/OpenEXR
+  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 
 )
 
 FILE ( WRITE ${CMAKE_BINARY_DIR}/IlmBase.pc "prefix=${CMAKE_INSTALL_PREFIX}\n" )
 FILE ( APPEND ${CMAKE_BINARY_DIR}/IlmBase.pc "exec_prefix=\${prefix}
-libdir=\${exec_prefix}/lib
-includedir=\${prefix}/include
-OpenEXR_includedir=\${prefix}/include/OpenEXR
+libdir=\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}
+includedir=\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}
+OpenEXR_includedir=\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 
 Name: IlmBase
 Description: Base math and exception libraries
@@ -227,5 +190,5 @@ Cflags: -pthread -I\${OpenEXR_includedir
 INSTALL ( FILES
   ${CMAKE_BINARY_DIR}/IlmBase.pc
   DESTINATION
-  lib/pkgconfig
+  ${CMAKE_INSTALL_LIBDIR}/pkgconfig
 )
diff -purN a/Half/CMakeLists.txt b/Half/CMakeLists.txt
--- a/Half/CMakeLists.txt	2014-08-10 05:21:45.000000000 +0100
+++ b/Half/CMakeLists.txt	2017-08-11 13:46:23.663934549 +0100
@@ -1,23 +1,26 @@
 # yue.nicholas@gmail.com
 
-ADD_EXECUTABLE ( eLut eLut.cpp )
+INCLUDE ( GNUInstallDirs )
 
-ADD_CUSTOM_COMMAND (
-  TARGET eLut POST_BUILD
-  COMMAND eLut > ${CMAKE_CURRENT_BINARY_DIR}/eLut.h
+ADD_EXECUTABLE ( eLut eLut.cpp )
+ADD_CUSTOM_COMMAND(
+  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/eLut.h
+  COMMAND eLut ARGS > ${CMAKE_CURRENT_BINARY_DIR}/eLut.h
+  DEPENDS eLut
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
-)
+  )
 SET_SOURCE_FILES_PROPERTIES(
   ${CMAKE_CURRENT_BINARY_DIR}/eLut.h
   PROPERTIES HEADER_FILE_ONLY TRUE
   )
 
 ADD_EXECUTABLE ( toFloat toFloat.cpp )
-ADD_CUSTOM_COMMAND (
-  TARGET toFloat POST_BUILD
-  COMMAND toFloat > ${CMAKE_CURRENT_BINARY_DIR}/toFloat.h
+ADD_CUSTOM_COMMAND(
+  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/toFloat.h
+  COMMAND toFloat ARGS > ${CMAKE_CURRENT_BINARY_DIR}/toFloat.h
+  DEPENDS toFloat
   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
-)
+  )
 SET_SOURCE_FILES_PROPERTIES(
   ${CMAKE_CURRENT_BINARY_DIR}/toFloat.h
   PROPERTIES HEADER_FILE_ONLY TRUE
@@ -27,9 +30,7 @@ SET_SOURCE_FILES_PROPERTIES(
   half.cpp
   PROPERTIES
   OBJECT_DEPENDS
-  ${CMAKE_CURRENT_BINARY_DIR}/eLut.h
-  OBJECT_DEPENDS
-  ${CMAKE_CURRENT_BINARY_DIR}/toFloat.h
+  "${CMAKE_CURRENT_BINARY_DIR}/eLut.h;${CMAKE_CURRENT_BINARY_DIR}/toFloat.h"
   )
 
 IF(BUILD_SHARED_LIBS)
@@ -46,7 +47,7 @@ ADD_DEPENDENCIES ( Half toFloat eLut )
 INSTALL ( TARGETS
   Half
   DESTINATION
-  lib
+  ${CMAKE_INSTALL_LIBDIR}
 )
 
 INSTALL ( FILES 
@@ -55,5 +56,5 @@ INSTALL ( FILES
   halfExport.h
   halfLimits.h
   DESTINATION
-  include/OpenEXR
+  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 )
diff -purN a/Half/half.cpp b/Half/half.cpp
--- a/Half/half.cpp	2014-08-10 05:21:45.000000000 +0100
+++ b/Half/half.cpp	2017-08-11 13:46:23.663934549 +0100
@@ -94,9 +94,9 @@ half::convert (int i)
     // of float and half (127 versus 15).
     //
 
-    register int s =  (i >> 16) & 0x00008000;
-    register int e = ((i >> 23) & 0x000000ff) - (127 - 15);
-    register int m =   i        & 0x007fffff;
+    int s =  (i >> 16) & 0x00008000;
+    int e = ((i >> 23) & 0x000000ff) - (127 - 15);
+    int m =   i        & 0x007fffff;
 
     //
     // Now reassemble s, e and m into a half:
diff -purN a/Half/halfExport.h b/Half/halfExport.h
--- a/Half/halfExport.h	2014-08-10 05:21:45.000000000 +0100
+++ b/Half/halfExport.h	2017-08-11 13:46:23.663934549 +0100
@@ -1,15 +1,39 @@
-#ifndef HALFEXPORT_H
-#define HALFEXPORT_H
-
+///////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2008, Industrial Light & Magic, a division of Lucas
+// Digital Ltd. LLC
+//
+// All rights reserved.
 //
-//  Copyright (c) 2008 Lucasfilm Entertainment Company Ltd.
-//  All rights reserved.   Used under authorization.
-//  This material contains the confidential and proprietary
-//  information of Lucasfilm Entertainment Company and
-//  may not be copied in whole or in part without the express
-//  written permission of Lucasfilm Entertainment Company.
-//  This copyright notice does not imply publication.
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are
+// met:
+// *       Redistributions of source code must retain the above copyright
+// notice, this list of conditions and the following disclaimer.
+// *       Redistributions in binary form must reproduce the above
+// copyright notice, this list of conditions and the following disclaimer
+// in the documentation and/or other materials provided with the
+// distribution.
+// *       Neither the name of Industrial Light & Magic nor the names of
+// its contributors may be used to endorse or promote products derived
+// from this software without specific prior written permission.
 //
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+//
+///////////////////////////////////////////////////////////////////////////
+
+#ifndef HALFEXPORT_H
+#define HALFEXPORT_H
 
 #if defined(OPENEXR_DLL)
     #if defined(HALF_EXPORTS)
diff -purN a/Half/half.h b/Half/half.h
--- a/Half/half.h	2014-08-10 05:21:45.000000000 +0100
+++ b/Half/half.h	2017-08-11 13:46:23.664934512 +0100
@@ -459,7 +459,7 @@ half::half (float f)
 	// to do the float-to-half conversion.
 	//
 
-	register int e = (x.i >> 23) & 0x000001ff;
+	int e = (x.i >> 23) & 0x000001ff;
 
 	e = _eLut[e];
 
@@ -470,7 +470,7 @@ half::half (float f)
 	    // bits and combine it with the sign and exponent.
 	    //
 
-	    register int m = x.i & 0x007fffff;
+	    int m = x.i & 0x007fffff;
 	    _h = e + ((m + 0x00000fff + ((m >> 13) & 1)) >> 13);
 	}
 	else
diff -purN a/Iex/CMakeLists.txt b/Iex/CMakeLists.txt
--- a/Iex/CMakeLists.txt	2014-08-10 05:21:45.000000000 +0100
+++ b/Iex/CMakeLists.txt	2017-08-11 13:46:23.664934512 +0100
@@ -1,5 +1,7 @@
 # yue.nicholas@gmail.com
 
+INCLUDE ( GNUInstallDirs )
+
 IF(BUILD_SHARED_LIBS)
     ADD_DEFINITIONS(-DIEX_EXPORTS)
 ENDIF()
@@ -13,7 +15,7 @@ ADD_LIBRARY ( Iex ${LIB_TYPE}
 INSTALL ( TARGETS
   Iex
   DESTINATION
-  lib
+  ${CMAKE_INSTALL_LIBDIR}
 )
 
 INSTALL ( FILES 
@@ -27,5 +29,5 @@ INSTALL ( FILES
   IexExport.h
   IexForward.h
   DESTINATION
-  include/OpenEXR
+  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 )
diff -purN a/IexMath/CMakeLists.txt b/IexMath/CMakeLists.txt
--- a/IexMath/CMakeLists.txt	2014-08-10 05:21:45.000000000 +0100
+++ b/IexMath/CMakeLists.txt	2017-08-11 13:46:23.664934512 +0100
@@ -1,5 +1,7 @@
 # pstanczyk@ilm.com
 
+INCLUDE ( GNUInstallDirs )
+
 IF(BUILD_SHARED_LIBS)
     ADD_DEFINITIONS(-DIEXMATH_EXPORTS)
 ENDIF()
@@ -12,7 +14,7 @@ TARGET_LINK_LIBRARIES(IexMath Iex)
 INSTALL ( TARGETS
   IexMath
   DESTINATION
-  lib
+  ${CMAKE_INSTALL_LIBDIR}
 )
 
 INSTALL ( FILES 
@@ -20,5 +22,5 @@ INSTALL ( FILES
   IexMathFpu.h  
   IexMathIeeeExc.h
   DESTINATION
-  include/OpenEXR
+  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 )
diff -purN a/IlmThread/CMakeLists.txt b/IlmThread/CMakeLists.txt
--- a/IlmThread/CMakeLists.txt	2014-08-10 05:21:45.000000000 +0100
+++ b/IlmThread/CMakeLists.txt	2017-08-11 13:46:23.664934512 +0100
@@ -1,5 +1,7 @@
 # yue.nicholas@gmail.com
 
+INCLUDE ( GNUInstallDirs )
+
 SET( ILMTHREAD_LIBRARY_SOURCES
   IlmThread.cpp
   IlmThreadMutex.cpp
@@ -31,7 +33,7 @@ TARGET_LINK_LIBRARIES(IlmThread Iex)
 INSTALL ( TARGETS
   IlmThread
   DESTINATION
-  lib
+  ${CMAKE_INSTALL_LIBDIR}
 )
 
 INSTALL ( FILES 
@@ -43,5 +45,5 @@ INSTALL ( FILES
   IlmThreadExport.h
   IlmThreadForward.h
   DESTINATION
-  include/OpenEXR
+  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 )
diff -purN a/Imath/CMakeLists.txt b/Imath/CMakeLists.txt
--- a/Imath/CMakeLists.txt	2014-08-10 05:21:45.000000000 +0100
+++ b/Imath/CMakeLists.txt	2017-08-11 13:46:23.665934475 +0100
@@ -1,5 +1,7 @@
 # yue.nicholas@gmail.com
 
+INCLUDE ( GNUInstallDirs )
+
 IF(BUILD_SHARED_LIBS)
     ADD_DEFINITIONS(-DIMATH_EXPORTS)
 ENDIF()
@@ -19,7 +21,7 @@ TARGET_LINK_LIBRARIES(Imath Iex)
 INSTALL ( TARGETS
   Imath
   DESTINATION
-  lib
+  ${CMAKE_INSTALL_LIBDIR}
 )
 
 INSTALL ( FILES 
@@ -57,5 +59,5 @@ INSTALL ( FILES
   ImathVecAlgo.h
   ImathVec.h
   DESTINATION
-  include/OpenEXR
+  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
 )
diff -purN a/Imath/ImathMatrix.h b/Imath/ImathMatrix.h
--- a/Imath/ImathMatrix.h	2014-08-10 05:21:45.000000000 +0100
+++ b/Imath/ImathMatrix.h	2017-08-11 13:46:23.665934475 +0100
@@ -2527,11 +2527,11 @@ Matrix44<T>::multiply (const Matrix44<T>
                        const Matrix44<T> &b,
                        Matrix44<T> &c)
 {
-    register const T * IMATH_RESTRICT ap = &a.x[0][0];
-    register const T * IMATH_RESTRICT bp = &b.x[0][0];
-    register       T * IMATH_RESTRICT cp = &c.x[0][0];
+    const T * IMATH_RESTRICT ap = &a.x[0][0];
+    const T * IMATH_RESTRICT bp = &b.x[0][0];
+          T * IMATH_RESTRICT cp = &c.x[0][0];
 
-    register T a0, a1, a2, a3;
+    T a0, a1, a2, a3;
 
     a0 = ap[0];
     a1 = ap[1];
diff -purN a/Makefile.am b/Makefile.am
--- a/Makefile.am	2014-08-10 05:21:45.000000000 +0100
+++ b/Makefile.am	2017-08-11 13:46:23.666934439 +0100
@@ -15,7 +15,7 @@ DIST_SUBDIRS = \
 
 EXTRA_DIST = \
 	AUTHORS COPYING ChangeLog INSTALL LICENSE NEWS \
-	README README.CVS README.OSX README.win32 \
+	README README.CVS README.OSX \
 	README.cmake.txt README.namespacing README.git \
 	bootstrap \
 	config.windows/IlmBaseConfig.h \
